---
- name: Deploy MuleSoft Based on Tower Input
  hosts: "{{ parsed_host }}"
  become: true
  vars:
    mule_version: "4.9.3"
    mule_root_dir: "/apps"
    mule_base_dir: "/apps/mulesoft"
    mule_runtime_dir: "/apps/mulesoft/runtime"
    mule_scripts_dir: "/apps/mulesoft/scripts"
    binary_file: "mule-ee-distribution-{{ mule_version }}.zip"
    binary_url: "http://10.220.36.44/pub/.tools/{{ binary_file }}"
    download_path: "{{ mule_scripts_dir }}/{{ binary_file }}"
    mule_user_top: "muleins"
    mule_group_top: "mulesvc"
    mule_user_inner: "muleins"
    mule_group_inner: "muleins"

    # Parse "prod_External_pwlvs01mul001"
    parts: "{{ env_businessgroup_hostname.split('_') }}"
    parsed_env: "{{ parts[0] }}"
    parsed_group: "{{ parts[1] | lower }}"
    parsed_host: "{{ parts[2] }}"
    license_type: "{{ 'prod' if parsed_env in ['prod', 'dr'] else 'non-prod' }}"

  tasks:

    - name: Ensure /apps (root:root)
      file:
        path: "{{ mule_root_dir }}"
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Create /apps/mulesoft (muleins:mulesvc)
      file:
        path: "{{ mule_base_dir }}"
        state: directory
        owner: "{{ mule_user_top }}"
        group: "{{ mule_group_top }}"
        mode: '0755'

    - name: Create /apps/mulesoft/runtime (muleins:muleins)
      file:
        path: "{{ mule_runtime_dir }}"
        state: directory
        owner: "{{ mule_user_inner }}"
        group: "{{ mule_group_inner }}"
        mode: '0755'

    - name: Create /apps/mulesoft/scripts (muleins:muleins)
      file:
        path: "{{ mule_scripts_dir }}"
        state: directory
        owner: "{{ mule_user_inner }}"
        group: "{{ mule_group_inner }}"
        mode: '0755'

    - name: Download and extract MuleSoft binary in one step
      shell: |
        mkdir -p "{{ mule_runtime_dir }}/{{ mule_version }}/{{ parsed_group }}" && \
        if [ ! -d "{{ mule_runtime_dir }}/{{ mule_version }}/{{ parsed_group }}/bin" ]; then
          wget -O "{{ download_path }}" "{{ binary_url }}" && \
          unzip -q "{{ download_path }}" -d "{{ mule_runtime_dir }}/{{ mule_version }}/{{ parsed_group }}"
        fi
      args:
        executable: /bin/bash

    - name: Copy environment-specific MuleSoft license using shell cp
      shell: |
        cp "/opt/mulesoft/licenses/{{ license_type }}-license.lic" "{{ mule_runtime_dir }}/{{ mule_version }}/{{ parsed_group }}/conf/license.lic"
      args:
        executable: /bin/bash

    - name: Start MuleSoft application
      shell: "{{ mule_runtime_dir }}/{{ mule_version }}/{{ parsed_group }}/bin/mule start"
      args:
        executable: /bin/bash
